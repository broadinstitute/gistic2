#!/usr/bin/perl
use strict;
use warnings;

## Generate M-files for unary functions that return a non-SegArray value

# announcements
if( @ARGV ) {
    my $s = (1 < @ARGV) ? 's' : '';
    print "Function declaration$s:\n\n";
}
else {
    print STDERR "USAGE:\n    ./unary.pl func1 [func2 [...]]\n";
}

# loop across arguments, creating an m-file for each
for my $op ( @ARGV ) {

    my $OP = $op;
    $OP =~ tr/a-z/A-Z/;

    print "B = $op(A);\n\n";

    open FILE,">$op.m";

# function definition body
    print FILE <<EOF;
%    SegArray implementation of $OP.
%    B = $OP(A)
%    Emulates normal behavior of $OP.
%    (see HELP $OP for details)
function B = $op(A)
% (code generated by unary.pl)
    try
        B = $op(A.vals);
    catch me
        throwAsCaller(me);
    end
end
EOF

    close FILE;
}
