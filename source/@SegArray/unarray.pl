#!/usr/bin/perl
use strict;
use warnings;

## Generate M-files for unary functions that operate on 
## values and return a SegArray

# announcements
if( @ARGV ) {
    my $s = (1 < @ARGV) ? 's' : '';
    print "Function declaration$s:\n\n";
}
else {
    print STDERR "USAGE:\n    ./unarray.pl func1 [func2 [...]]\n";
}

# loop across arguments, creating an m-file for each
for my $op ( @ARGV ) {

    my $OP = $op;
    $OP =~ tr/a-z/A-Z/;

    print "B = $op(A);\n\n";

    open FILE,">$op.m";

# function definition body
    print FILE <<EOF;
%    SegArray implementation of $OP.
%    B = $OP(A)
%    Emulates full array behavior of $OP; returns a SegArray.
%    (use HELP $OP for details)
function B = $op(A)
% (code generated by unarray.pl)
B = A;
try
    B.vals = $op(A.vals);
catch me
    throwAsCaller(me);
end
EOF
###############
    close FILE;
}
